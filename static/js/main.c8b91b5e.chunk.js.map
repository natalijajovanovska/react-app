{"version":3,"sources":["Components/logo193.png","Components/Header/Header.js","Components/ScrollToTop.js","Components/NotFound/NotFound.js","Components/LoadingSpinner.js","Components/Home/Quadrants/Quadrant2/Quadrant2.js","Components/Home/Quadrants/Quadrant1/Quadrant1.js","Components/Home/Quadrants/Quadrant3/Quadrant3.js","Components/Home/Quadrants/Quadrant4/Quadrant4.js","Components/Home/Home.js","Components/CustomGuest/CustomGuest.js","Components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","props","Navbar","fixed","bg","variant","Brand","href","className","scroll","Nav","to","ScrollToTop","prevProps","this","location","window","scrollTo","children","React","Component","withRouter","NotFound","Container","Row","Col","xs","Jumbotron","Button","LoadingSpinner","Quadrant2","guestsList","guests","md","map","user","key","id","address","geo","lat","lng","Card","text","style","width","name","Body","Text","city","undefined","Quadrant1","Quadrant3","Quadrant4","Home","state","isLoading","fetch","response","ok","Error","statusText","json","setState","console","log","alert","fluid","CustomGuest","close","showAdd","showEdit","open","currentIndex","customInvites","newestInvite","guestName","guestCity","def","index","confirm","slice","splice","localStorage","setItem","JSON","stringify","push","parse","getItem","onClick","event","length","guest","Footer","ButtonToolbar","deleteGuest","Modal","show","onHide","closeButton","Title","FormGroup","controlId","FormLabel","FormControl","type","value","placeholder","onChange","updateGuestName","target","updateGuestCity","updateNewestGuest","saveNewGuest","scrollTopFn","top","behavior","src","Logo","padding","cursor","alt","App","scrolled","addEventListener","scrollY","exact","path","component","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c8b91b5e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo193.833c5a26.png\";","import React from 'react';\r\nimport './Header.css';\r\nimport {Link} from 'react-router-dom';\r\nimport { Navbar, Nav } from 'react-bootstrap';\r\n\r\nconst Header = props => (\r\n\r\n    <Navbar fixed=\"top\" bg=\"dark\" variant=\"dark\">\r\n        <Navbar.Brand href=\"/\" className={props.scroll ? 'scrolled brand hover-text' : 'not-scrolled brand hover-text'} >The Quadrant Event</Navbar.Brand>\r\n        <Nav>\r\n            <Link to=\"/CustomGuest\" className=\"text-white text-decoration-none hover-text\">Add Custom Guest</Link>\r\n        </Nav>\r\n    </Navbar>\r\n    \r\n);\r\n\r\nexport default Header;","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass ScrollToTop extends React.Component {\r\n\r\n  componentDidUpdate(prevProps) {\r\n    \r\n    if (this.props.location !== prevProps.location) {\r\n      window.scrollTo(0, 0);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default withRouter(ScrollToTop);","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Container, Row, Col, Button, Jumbotron } from 'react-bootstrap';\r\n\r\nconst NotFound = () => (\r\n    <Container>\r\n        <div className=\"empty-div\"></div>\r\n        <Row>\r\n            <Col xs=\"12\" className=\"text-center\">\r\n                <Jumbotron>\r\n                    <p className=\"display-1 text-danger font-weight-bold\">404 Error</p>\r\n                    <h2>Sorry, the page you are looking for could not be found.</h2>\r\n                    <Button variant=\"success\" className=\"btn-white-text\"><Link to=\"/\">Go back to Home Page</Link></Button>\r\n                </Jumbotron>\r\n            </Col>\r\n        </Row>\r\n    </Container >\r\n)\r\n\r\nexport default NotFound;","import React from 'react';\r\nimport './LoadingSpinner.css';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nconst LoadingSpinner = () => (\r\n    <Container>\r\n        <Row>\r\n            <Col xs=\"12\" className=\"text-center\">\r\n                <div className=\"empty-div\"></div>\r\n                <i className=\"fa fa-spinner fa-spin spinner\" />\r\n            </Col>\r\n        </Row>\r\n    </Container>\r\n);\r\n\r\nexport default LoadingSpinner;","import React from 'react';\r\nimport { Col, Card } from 'react-bootstrap';\r\n\r\nclass Quadrant2 extends React.Component {\r\n\r\n    render() {\r\n        let guestsList = this.props.guests;\r\n\r\n        return (\r\n            <Col md=\"6\" className=\"pr-3 pl-3\">\r\n                <div className=\"border-col text-center\">\r\n                    <h1>Quadrant N.2</h1>\r\n                    {guestsList.map((user) => (\r\n                        <div key={user.id}>\r\n                            {(user.address.geo.lat < 0) && (user.address.geo.lng > 0) ?\r\n                                <Card bg=\"dark\" text=\"white\" className=\"mx-auto mt-5 card-custom\" style={{ width: '18rem' }}>\r\n                                    <Card.Header className=\"font-weight-bold\">\r\n                                        {user.name}\r\n                                    </Card.Header>\r\n                                    <Card.Body>\r\n                                        <Card.Text>\r\n                                            {user.address.city} <br />\r\n                                            <span>Lat: {user.address.geo.lat}</span> <br />\r\n                                            <span>Lng: {user.address.geo.lng}</span>\r\n\r\n                                        </Card.Text>\r\n\r\n                                    </Card.Body>\r\n                                </Card>\r\n                                : undefined}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </Col>\r\n\r\n        )\r\n    };\r\n}\r\n\r\nexport default Quadrant2;","import React from 'react';\r\nimport { Col, Card } from 'react-bootstrap';\r\n\r\nclass Quadrant1 extends React.Component {\r\n\r\n    render() {\r\n        let guestsList = this.props.guests;\r\n\r\n        return (\r\n            <Col md=\"6\" className=\"pr-3 pl-3\">\r\n                <div className=\"border-col text-center\">\r\n                <h1>Quadrant N.1</h1>\r\n                {guestsList.map((user) => (\r\n                    <div key={user.id}>\r\n                        {(user.address.geo.lat > 0) && (user.address.geo.lng > 0) ?\r\n                            <Card bg=\"dark\" text=\"white\" className=\"mx-auto mt-5 card-custom\" style={{ width: '18rem' }}>\r\n                                <Card.Header className=\"font-weight-bold\">\r\n                                    {user.name}\r\n                                </Card.Header>\r\n                                <Card.Body>\r\n                                    <Card.Text>\r\n                                        {user.address.city} <br />\r\n                                        <span>Lat: {user.address.geo.lat}</span> <br />\r\n                                        <span>Lng: {user.address.geo.lng}</span>\r\n        \r\n                                    </Card.Text>\r\n\r\n                                </Card.Body>\r\n                            </Card>\r\n                            : undefined}\r\n                    </div>\r\n                ))}\r\n                </div>\r\n                \r\n            </Col>\r\n\r\n        )\r\n    };\r\n}\r\n\r\nexport default Quadrant1;","import React from 'react';\r\nimport { Col, Card } from 'react-bootstrap';\r\n\r\nclass Quadrant3 extends React.Component {\r\n\r\n    render() {\r\n        let guestsList = this.props.guests;\r\n\r\n        return (\r\n            <Col md=\"6\" className=\"pr-3 pl-3\">\r\n                <div className=\"border-col text-center\">\r\n                    <h1>Quadrant N.3</h1>\r\n                    {guestsList.map((user) => (\r\n                        <div key={user.id}>\r\n                            {(user.address.geo.lat < 0) && (user.address.geo.lng < 0) ?\r\n                                <Card bg=\"dark\" text=\"white\" className=\"mx-auto mt-5 card-custom\" style={{ width: '18rem' }}>\r\n                                    <Card.Header className=\"font-weight-bold\">\r\n                                        {user.name}\r\n                                    </Card.Header>\r\n                                    <Card.Body>\r\n                                        <Card.Text>\r\n                                            {user.address.city} <br />\r\n                                            <span>Lat: {user.address.geo.lat}</span> <br />\r\n                                            <span>Lng: {user.address.geo.lng}</span>\r\n\r\n                                        </Card.Text>\r\n\r\n                                    </Card.Body>\r\n                                </Card>\r\n                                : undefined}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </Col>\r\n\r\n        )\r\n    };\r\n}\r\n\r\nexport default Quadrant3;","import React from 'react';\r\nimport { Col, Card } from 'react-bootstrap';\r\n\r\nclass Quadrant4 extends React.Component {\r\n\r\n    render() {\r\n        let guestsList = this.props.guests;\r\n\r\n        return (\r\n            <Col md=\"6\" className=\"pr-3 pl-3\">\r\n                <div className=\"border-col text-center\">\r\n                <h1>Quadrant N.4</h1>\r\n                {guestsList.map((user) => (\r\n                    <div key={user.id}>\r\n                        {(user.address.geo.lat > 0) && (user.address.geo.lng < 0) ?\r\n                            <Card bg=\"dark\" text=\"white\" className=\"mx-auto mt-5 card-custom\" style={{ width: '18rem' }}>\r\n                                <Card.Header className=\"font-weight-bold\">\r\n                                    {user.name}\r\n                                </Card.Header>\r\n                                <Card.Body>\r\n                                    <Card.Text>\r\n                                        {user.address.city} <br />\r\n                                        <span>Lat: {user.address.geo.lat}</span> <br />\r\n                                        <span>Lng: {user.address.geo.lng}</span>\r\n        \r\n                                    </Card.Text>\r\n\r\n                                </Card.Body>\r\n                            </Card>\r\n                            : undefined}\r\n                    </div>\r\n                ))}\r\n                </div>\r\n                \r\n            </Col>\r\n\r\n        )\r\n    };\r\n}\r\n\r\nexport default Quadrant4;","import React from 'react';\r\nimport { Container, Row } from 'react-bootstrap';\r\nimport LoadingSpinner from '../LoadingSpinner';\r\nimport Quadrant2 from './Quadrants/Quadrant2/Quadrant2';\r\nimport Quadrant1 from './Quadrants/Quadrant1/Quadrant1';\r\nimport Quadrant3 from './Quadrants/Quadrant3/Quadrant3';\r\nimport Quadrant4 from './Quadrants/Quadrant4/Quadrant4';\r\n\r\n\r\nclass Home extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            guests: [],\r\n            isLoading: true\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const response = await fetch(`https://jsonplaceholder.typicode.com/users`);\r\n            if (!response.ok) {\r\n                throw Error(response.statusText);\r\n            }\r\n            const json = await response.json();\r\n            this.setState({\r\n                guests: json,\r\n                isLoading: false\r\n            });\r\n            // console.log(json);\r\n        } catch (error) {\r\n            console.log(error);\r\n            alert(\"Something went wrong, please try again\");\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.state.isLoading) {\r\n            return <LoadingSpinner />\r\n        }\r\n\r\n        return (\r\n                <Container fluid={true}>\r\n                    <div className=\"empty-div\"></div>\r\n                    <Row className=\"mt-3 custom-mb\">\r\n                        <Quadrant2 guests={this.state.guests} />\r\n                        <Quadrant1 guests={this.state.guests} />\r\n                    </Row>\r\n                    <Row className=\"mt-4 custom-mb\">\r\n                        <Quadrant3 guests={this.state.guests} />\r\n                        <Quadrant4 guests={this.state.guests} />\r\n                    </Row>\r\n                </Container>\r\n        )\r\n    };\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport { Container, Row, Col, Button, ButtonToolbar, Modal, FormGroup, FormLabel, FormControl, Card } from 'react-bootstrap';\r\n\r\nclass CustomGuest extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            customInvites: [],\r\n            showAdd: false,\r\n            showEdit: false,\r\n            currentIndex: 0,\r\n            newestInvite: { \r\n                guestName: \"\", \r\n                guestCity: \"\" },\r\n            def: -1\r\n        }\r\n    }\r\n\r\n    deleteGuest(index) {\r\n        if (window.confirm(\"Do you want to delete this guest?\")) {\r\n            let customInvites = this.state.customInvites.slice();\r\n            customInvites.splice(index, 1);\r\n            localStorage.setItem('customInvites', JSON.stringify(customInvites));\r\n            this.setState({ customInvites });\r\n            this.setState({ def: 0 });\r\n        }\r\n    }\r\n\r\n    updateNewestGuest(guestName, guestCity) {\r\n        this.setState({ newestInvite: { guestName: guestName, guestCity: guestCity } })\r\n    }\r\n\r\n    saveNewGuest() {\r\n        if (this.state.newestInvite.guestName < 1 || this.state.newestInvite.guestCity < 1) {\r\n            alert(\"Enter guest\");\r\n        } else {\r\n            let customInvites = this.state.customInvites.slice();\r\n            customInvites.push({ guestName: this.state.newestInvite.guestName, guestCity: this.state.newestInvite.guestCity });\r\n            localStorage.setItem('customInvites', JSON.stringify(customInvites));\r\n            this.setState({ customInvites });\r\n            this.setState({ newestInvite: { guestName: \"\", guestCity: \"\" } });\r\n            this.close();\r\n        }\r\n    }\r\n\r\n    close = () => {\r\n        if (this.state.showAdd) {\r\n            this.setState({ showAdd: false })\r\n        } else if (this.state.showEdit) {\r\n            this.setState({ showEdit: false })\r\n        }\r\n    }\r\n\r\n    open = (state, currentIndex) => {\r\n        this.setState({ [state]: true });\r\n        this.setState({ currentIndex });\r\n    }\r\n\r\n    updateGuestName(guestName, currentIndex) {\r\n        let customInvites = this.state.customInvites.slice();\r\n        customInvites[currentIndex] = { guestName: guestName, guestCity: customInvites[currentIndex].guestCity };\r\n        localStorage.setItem('customInvites', JSON.stringify(customInvites));\r\n        this.setState({ customInvites });\r\n    }\r\n\r\n    updateGuestCity(guestCity, currentIndex) {\r\n        let customInvites = this.state.customInvites.slice();\r\n        customInvites[currentIndex] = { guestName: customInvites[currentIndex].guestName, guestCity: guestCity };\r\n        localStorage.setItem('customInvites', JSON.stringify(customInvites));\r\n        this.setState({ customInvites });\r\n    }\r\n\r\n    componentDidMount() {\r\n        let customInvites = JSON.parse(localStorage.getItem('customInvites')) || [];\r\n        this.setState({ customInvites });\r\n    }\r\n\r\n    render() {\r\n\r\n        const { customInvites, newestInvite, currentIndex } = this.state;\r\n\r\n        return (\r\n            <Container>\r\n                <div className=\"empty-div\"></div>\r\n                <Row>\r\n                    <Col>\r\n                        <h2 className=\"text-center font-weight-bold mt-3\">Want a bigger party?</h2>\r\n                        <Button variant=\"success\" className=\"mx-auto text-white mt-5 mb-5 d-block\" \r\n                        onClick={(event) => this.open(\"showAdd\", currentIndex)}>\r\n                            Add Custom Guest\r\n                        </Button>\r\n\r\n                        {customInvites.length > 0 && (\r\n                            <div>\r\n                                {customInvites.map((guest, index) => (\r\n                                    <Card key={index} bg=\"dark\" text=\"white\" className=\"mx-auto mt-5 card-custom\" style={{ width: '18rem' }}>\r\n                                        <Card.Header className=\"font-weight-bold text-center\">\r\n                                            {guest.guestName}\r\n                                        </Card.Header>\r\n                                        <Card.Body className=\"text-center\">\r\n                                            <Card.Text>\r\n                                                {guest.guestCity}\r\n                                            </Card.Text>\r\n                                        </Card.Body>\r\n                                        <Card.Footer>\r\n                                            <ButtonToolbar>\r\n                                                <Button className=\"btn-block\" variant=\"danger\"\r\n                                                    onClick={(event) => this.deleteGuest(index)}>\r\n                                                    Delete guest\r\n                                                </Button>\r\n                                                <Button variant=\"info\" className=\"btn-block\"\r\n                                                    onClick={(event) => this.open(\"showEdit\", index)}>\r\n                                                    Edit guest\r\n                                                </Button>\r\n                                            </ButtonToolbar>\r\n                                        </Card.Footer>\r\n                                    </Card>\r\n                                ))}\r\n\r\n                                <Modal show={this.state.showEdit} onHide={this.close} className=\"mt-5\">\r\n                                    <Modal.Header closeButton>\r\n                                        <Modal.Title>Edit guest</Modal.Title>\r\n                                    </Modal.Header>\r\n                                    <Modal.Body>\r\n                                        <FormGroup controlId=\"formBasicsText\">\r\n                                            <FormLabel>Edit Guest Name</FormLabel>\r\n                                            <FormControl\r\n                                                type=\"text\"\r\n                                                value={customInvites[currentIndex].guestName}\r\n                                                placeholder=\"Edit Guest Name\"\r\n                                                onChange={(event) => this.updateGuestName(event.target.value, currentIndex)}>\r\n                                            </FormControl>\r\n                                        </FormGroup>\r\n                                        <FormGroup controlId=\"formBasicText2\">\r\n                                            <FormLabel>Edit Guest City</FormLabel>\r\n                                            <FormControl \r\n                                                type=\"text\"\r\n                                                value={customInvites[currentIndex].guestCity}\r\n                                                placeholder=\"Edit Guest City\"\r\n                                                onChange={(event) => this.updateGuestCity(event.target.value, currentIndex)}>\r\n                                            </FormControl>\r\n                                        </FormGroup>\r\n                                    </Modal.Body>\r\n                                    <Modal.Footer>\r\n                                        <Button variant=\"success\" \r\n                                        onClick={(event) => { this.close() }}>\r\n                                            Save Edited guest\r\n                                        </Button>\r\n                                    </Modal.Footer>\r\n                                </Modal>\r\n                            </div>\r\n                        )}\r\n\r\n                        <Modal show={this.state.showAdd} onHide={this.close} className=\"mt-5\">\r\n                            <Modal.Header closeButton>\r\n                                <Modal.Title>Add guest</Modal.Title>\r\n                            </Modal.Header>\r\n                            <Modal.Body>\r\n                                <FormGroup controlId=\"formBasicText\">\r\n                                    <FormLabel>Guest Name</FormLabel>\r\n                                    <FormControl\r\n                                        type=\"text\"\r\n                                        value={newestInvite.guestName}\r\n                                        placeholder=\"Enter Guest Name\"\r\n                                        onChange={(event) => this.updateNewestGuest(event.target.value, newestInvite.guestCity)}>\r\n                                    </FormControl>\r\n                                </FormGroup>\r\n                                <FormGroup controlId=\"formBasicText2\">\r\n                                    <FormLabel>Guest City</FormLabel>\r\n                                    <FormControl \r\n                                        type=\"text\"\r\n                                        value={newestInvite.guestCity}\r\n                                        placeholder=\"Enter Guest City\"\r\n                                        onChange={(event) => this.updateNewestGuest(newestInvite.guestName, event.target.value)}>\r\n                                    </FormControl>\r\n                                </FormGroup>\r\n                            </Modal.Body>\r\n                            <Modal.Footer>\r\n                                <Button variant=\"success\" \r\n                                onClick={(event) => { this.saveNewGuest() }}>\r\n                                    Save\r\n                                </Button>\r\n                            </Modal.Footer>\r\n                        </Modal>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )}\r\n}\r\n\r\nexport default CustomGuest;","import React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport Logo from './logo193.png';\r\n\r\nclass Footer extends React.Component {\r\n\r\n    scrollTopFn = () => {\r\n        window.scrollTo({\r\n            top: 0,\r\n            behavior: 'smooth'\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container fluid=\"true\" className=\"bg-dark mt-5\">\r\n                <Row>\r\n                    <Col className=\"text-center\">\r\n                        <img src={Logo} style={{ width: \"60px\", padding: \"10px\", cursor: \"pointer\" }} onClick={this.scrollTopFn} alt=\"Logo\"/>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Footer;","import React from 'react';\nimport './App.css';\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Header from './Components/Header/Header';\nimport ScrollToTop from './Components/ScrollToTop';\nimport NotFound from './Components/NotFound/NotFound';\nimport Home from './Components/Home/Home';\nimport CustomGuest from './Components/CustomGuest/CustomGuest';\nimport Footer from './Components/Footer';\n\nclass App extends React.Component {\n\n  constructor() {\n    super();\n\n    this.state = {\n      scrolled: false\n    }\n  }\n\n  componentDidMount() {\n    \n    window.addEventListener('scroll', () => {\n      const isTop = window.scrollY < 100;\n      if (isTop !== true) {\n        this.setState({ scrolled: true })\n      } else {\n        this.setState({ scrolled: false })\n      }\n    })\n  }\n\n  render() {\n    return (\n      <Router>\n        <ScrollToTop>\n          <Header scroll={this.state.scrolled} />\n          <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/CustomGuest\" component={CustomGuest} />\n          <Route component={NotFound} />\n          </Switch>\n          <Footer />\n        </ScrollToTop>\n      </Router >\n    )\n  }\n}\n\nexport default App;\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}